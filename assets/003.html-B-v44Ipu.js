import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,o as e}from"./app-BTnQ63EI.js";const l={};function h(n,i){return e(),a("div",null,[...i[0]||(i[0]=[t(`<h1 id="_003-js-基本语法" tabindex="-1"><a class="header-anchor" href="#_003-js-基本语法"><span>003 - JS 基本语法</span></a></h1><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><p>注释的内容不会被执行，但是可以在源代码中查看</p><p>要养成良好编写注释的习惯，也可以通过注释来对代码进行简单的调试</p><h3 id="单行注释" tabindex="-1"><a class="header-anchor" href="#单行注释"><span>单行注释</span></a></h3><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这是单行注释</span></span></code></pre></div><h3 id="多行注释" tabindex="-1"><a class="header-anchor" href="#多行注释"><span>多行注释</span></a></h3><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    这是多行注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    这是多行注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span></code></pre></div><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法"><span>基本语法</span></a></h2><ol><li><p>JS 中严格区分大小写</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这两个是完全不同的函数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;我是 alert 函数，可以弹出警告框&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;我是个没有被定义的函数，会报错&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div></li><li><p>JS 中所有的语句都以分号 <code>;</code> 结尾</p><ul><li>如果不屑分号，浏览器会自动添加分号，但是会消耗一些系统资源</li><li>而且有时候浏览器会自动添加分号，导致代码执行错误</li></ul><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;要在末尾加分号&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div></li><li><p>JS 中会忽略多个空格和换行，所以我们可以利用空格和换行来对代码进行格式化</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;我是 Alert 函数&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div></li></ol>`,10)])])}const r=s(l,[["render",h]]),c=JSON.parse('{"path":"/study/javascript/003.html","title":"003 - JS 基本语法","lang":"zh-CN","frontmatter":{"title":"003 - JS 基本语法","category":"笔记","tags":["Javascript","语法"],"description":"003 - JS 基本语法 注释 注释的内容不会被执行，但是可以在源代码中查看 要养成良好编写注释的习惯，也可以通过注释来对代码进行简单的调试 单行注释 多行注释 基本语法 JS 中严格区分大小写 JS 中所有的语句都以分号 ; 结尾 如果不屑分号，浏览器会自动添加分号，但是会消耗一些系统资源 而且有时候浏览器会自动添加分号，导致代码执行错误 JS 中...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"003 - JS 基本语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-18T08:49:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chairowell\\",\\"url\\":\\"https://nekoblog.chairo.cc\\"}]}"],["meta",{"property":"og:url","content":"https://nekoblog.chairo.cc/study/javascript/003.html"}],["meta",{"property":"og:site_name","content":"NekoBlog"}],["meta",{"property":"og:title","content":"003 - JS 基本语法"}],["meta",{"property":"og:description","content":"003 - JS 基本语法 注释 注释的内容不会被执行，但是可以在源代码中查看 要养成良好编写注释的习惯，也可以通过注释来对代码进行简单的调试 单行注释 多行注释 基本语法 JS 中严格区分大小写 JS 中所有的语句都以分号 ; 结尾 如果不屑分号，浏览器会自动添加分号，但是会消耗一些系统资源 而且有时候浏览器会自动添加分号，导致代码执行错误 JS 中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-18T08:49:57.000Z"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:tag","content":"Javascript"}],["meta",{"property":"article:modified_time","content":"2025-09-18T08:49:57.000Z"}]]},"git":{"createdTime":1758185397000,"updatedTime":1758185397000,"contributors":[{"name":"chairowell","username":"chairowell","email":"chairowell@gmail.com","commits":1,"url":"https://github.com/chairowell"}]},"readingTime":{"minutes":0.97,"words":291},"filePathRelative":"study/javascript/003.md","excerpt":"\\n<h2>注释</h2>\\n<p>注释的内容不会被执行，但是可以在源代码中查看</p>\\n<p>要养成良好编写注释的习惯，也可以通过注释来对代码进行简单的调试</p>\\n<h3>单行注释</h3>\\n<div class=\\"language-js\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-js\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 这是单行注释</span></span></code></pre>\\n</div>","autoDesc":true}');export{r as comp,c as data};
